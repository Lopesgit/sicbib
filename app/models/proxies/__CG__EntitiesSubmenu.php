<?php

namespace DoctrineProxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Submenu extends \Entities\Submenu implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'nome', 'has_sub', 'url', 'ordem', 'menu', 'subMenus2', 'funcionalidades');
        }

        return array('__isInitialized__', 'id', 'nome', 'has_sub', 'url', 'ordem', 'menu', 'subMenus2', 'funcionalidades');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Submenu $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function addSubmenu($submenu2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubmenu', array($submenu2));

        return parent::addSubmenu($submenu2);
    }

    /**
     * {@inheritDoc}
     */
    public function addFuncionalidade($funcionalidade)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFuncionalidade', array($funcionalidade));

        return parent::addFuncionalidade($funcionalidade);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getNome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', array());

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function setNome($nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', array($nome));

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function getHas_sub()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHas_sub', array());

        return parent::getHas_sub();
    }

    /**
     * {@inheritDoc}
     */
    public function setHas_sub($has_sub)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHas_sub', array($has_sub));

        return parent::setHas_sub($has_sub);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', array());

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', array($url));

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getMenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenu', array());

        return parent::getMenu();
    }

    /**
     * {@inheritDoc}
     */
    public function setMenu($menu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMenu', array($menu));

        return parent::setMenu($menu);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubMenus2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubMenus2', array());

        return parent::getSubMenus2();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubMenus2($subMenus2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubMenus2', array($subMenus2));

        return parent::setSubMenus2($subMenus2);
    }

    /**
     * {@inheritDoc}
     */
    public function getFuncionalidades()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFuncionalidades', array());

        return parent::getFuncionalidades();
    }

    /**
     * {@inheritDoc}
     */
    public function setFuncionalidades($funcionalidades)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFuncionalidades', array($funcionalidades));

        return parent::setFuncionalidades($funcionalidades);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrdem()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrdem', array());

        return parent::getOrdem();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrdem($ordem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrdem', array($ordem));

        return parent::setOrdem($ordem);
    }

}
